class Solution {
    static public int[] max;
    static public long minCost(int[] nums, int x) {
        int len = nums.length;
        long ans = 0;
        max = new int[len];
        for (int i = 0; i < len; i++) {
            max[i] = nums[i];
            ans += max[i];
        }
        for (int i = 1; i < len; i++) {
            ans = rotate(nums, i, x, ans);
        }
        return ans;
    }

    static long rotate(int[] arr, int index, int x, long ans) {
        int first = arr[0];

        // array rotated
        for (int i = 1; i < arr.length; i++) {
            arr[i - 1] = arr[i];
            if (i == arr.length - 1) {
                arr[i] = first;
            }
        }

        // max arrays updated
        long sum = 0;
        for (int i = 0; i < arr.length; i++) {
            max[i] = Math.min(max[i], arr[i]);
            sum += max[i];
        }
        return Math.min(ans, (sum + (x * index)));
    }
}
