 static public int findMin(int[] nums) {
        int ans = 0;
        int low=0,high=nums.length-1;
        while(low<high){
            int mid=low+(high-low)/2;
            if(nums[mid]>nums[high]){
              low=mid+1;  
            }
            else if(nums[mid]<nums[low]){
                high=mid;
                low++;
            }
            else{
                high--;
            }
        }
        return nums[low];
    }
    
   /*
   Need to modify
   static public int findMin(int[] nums) {
        int ans = 0;
        ArrayDeque<Integer> adq = new ArrayDeque<>();
        for (int i = 0; i < nums.length; i++) {
            adq.add(nums[i]);
        }
        while (adq.peekFirst() > adq.peekLast()) {
            adq.addFirst(adq.pollLast());
        }
        ans = adq.peekFirst();
        return ans;
    }
    */
